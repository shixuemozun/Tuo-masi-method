#include<iostream>
using namespace std;

double a[9][9],a1[9][9],c[9],u[9];

int main()
{
//=================================设置初始矩阵=================================//	
	//主对角线 
	for(int i=0;i<9;i++)
	{
		for(int j=0;j<9;j++)
		{
		if(i==j)
		{
		  
			a[i][j] = 2;
	    }
	
	
	
		}

	}
	
//下对角线
	for(int i1=1;i1<9;i1++)
	{
		for(int j1=0;j1<9;j1++)
		{
	         if(i1==j1+1)
	         
	        {
	        	a[i1][j1] = 1;
	        	
			}
	
	
		}

	}
	
//上对角线 

	for(int i2=0;i2<9;i2++)
	{
		for(int j2=0;j2<9;j2++)
		{
	         if(i2==j2-1)
	         
	        {
	        	a[i2][j2] = 3;
	        	
			}
	
	
		}

	}
	
//设置c矩阵(结果矩阵)

	
	
	
	
/*	
//输出原矩阵


	
	
	for(int j3=0;j3<9;j3++)
	{
		
		cout << a[8][j3];
		cout <<"=======" ;
		
		
		
	}
	
*/	

double c[9] = {1,1,2,3,4,5,6,7,8};
	
/*	
//输出c矩阵
for(int c1=0;c1<9;c1++)
{
	cout << c[c1];
	cout <<"=======" ;
	
	
	}
*/	
	
	
	
//==========================托马斯算法=====================================//

//改变主对角线上的数值(第一行是不变的)

	for(int i=1;i<9;i++)
	{
		for(int j=0;j<9;j++)
		{
		if(i==j)
		{
		  
			a[i][j] = a[i][j] - (a[i][j-1])*(a[i-1][j])/a[i-1][j-1];
	    }
	
	
	
		}

	}
	
//输出修改主对角线后的矩阵

/*	
	
	for(int j3=0;j3<9;j3++)
	{
		
		cout << a[8][j3];
		cout <<"=======" ;
		
		
		
	}
	
*/	
	
//修改下对角线后的矩阵
	
	
	for(int i1=1;i1<9;i1++)
	{
		for(int j1=0;j1<9;j1++)
		{
	         if(i1==j1+1)
	         
	        {
	        	a[i1][j1] = 0;
	        	
			}
	
	
		}

	}
	
//输出修改下对角线后的矩阵	
	
/*
	
	for(int j3=0;j3<9;j3++)
	{
		
		cout << a[8][j3];
		cout <<"=======" ;
		
		
		
	}
	
*/

//赋值矩阵到a1[9][9] 
		
		for(int i=0;i<9;i++)
	{
		for(int j=0;j<9;j++)
		{
		
	
	      a1[i][j] = a[i][j];
	
		}

	}

//输出复制后的矩阵	


/*	
	for(int j3=0;j3<9;j3++)
	{
		
		cout << a1[1][j3];
		cout <<"=======" ;
		
		
		
	}
	
*/

//修改c矩阵

for(int c2=1;c2<9;c2++)
{
	
	
	c[c2] = c[c2]- c[c2-1]*1/a1[c2-1][c2-1];
	
	
 } 
/*
//输出改c矩阵

 for(int c1=0;c1<9;c1++)
{
	cout << c[c1];
	cout <<"=======" ;
	
	
	}
*/

u[8] = c[8]/a1[8][8];

for(int p=7;p>=0;p--)
{
	u[p] = c[p]-(a[p][p+1]*u[p+1])/a[p][p];
	
	
}
/*
//输出改 u 矩阵

 for(int u1=0;u1<9;u1++)
{
	cout << u[u1];
	cout <<"=======" ;
	
	
	}
*/






	
	return 0;
 } 
